.mgridfluid(@fluidGridColumnWidth, @fluidGridGutterWidth) {

  .mgcolX (@index) when (@index > 0) {
    .mgcol@{index} { .mgcol(@index); }
    .mgcolX(@index - 1);
  }
  .mgcolX (0) {}

  .mgoffsetX (@index) when (@index > 0) {
    .mgoffset@{index} { .mgoffset(@index); }
    .mgoffset@{index}:first-child { .mgoffsetFirstChild(@index); }
    .mgoffsetX(@index - 1);
  }
  .mgoffsetX (0) {}

  .mgoffset (@columns) {
    margin-left: (@fluidGridColumnWidth * @columns) + (@fluidGridGutterWidth * (@columns - 1)) + (@fluidGridGutterWidth*2);
        *margin-left: (@fluidGridColumnWidth * @columns) + (@fluidGridGutterWidth * (@columns - 1)) - (.5 / @gridRowWidth * 100 * 1%) + (@fluidGridGutterWidth*2) - (.5 / @gridRowWidth * 100 * 1%);
  }

  .mgoffsetFirstChild (@columns) {
    margin-left: (@fluidGridColumnWidth * @columns) + (@fluidGridGutterWidth * (@columns - 1)) + (@fluidGridGutterWidth);
    *margin-left: (@fluidGridColumnWidth * @columns) + (@fluidGridGutterWidth * (@columns - 1)) - (.5 / @gridRowWidth * 100 * 1%) + @fluidGridGutterWidth - (.5 / @gridRowWidth * 100 * 1%);
  }

  .mgcol(@columns) {
    width: (@fluidGridColumnWidth * @columns) + (@fluidGridGutterWidth * (@columns - 1));
    *width: (@fluidGridColumnWidth * @columns) + (@fluidGridGutterWidth * (@columns - 1)) - (.5 / @gridRowWidth * 100 * 1%);
    .clearfix();
  }

  .mgrow-fluid {
    width: 100%;
    .clearfix();
    [class*="mgcol"] {
      .input-block-level();
      float: left;
      margin-left: @fluidGridGutterWidth;
      *margin-left: @fluidGridGutterWidth - (.5 / @gridRowWidth * 100 * 1%);
    }
    [class*="mgcol"]:first-child {
      margin-left: 0;
    }
    .mgcolX (@gridColumns);
    .mgoffsetX (@gridColumns);
  }
}


.nav-mediagrid > li > a {
  padding-top: 8px;
  padding-bottom: 8px;
  margin-top: 2px;
  margin-bottom: 2px;
  .border-radius(1px);
  color: @grayDark;
}

// Active state
.nav-mediagrid > .active > a,
.nav-mediagrid > .active > a:hover,
.nav-mediagrid > .active > a:focus {
  color: @white;
  background-color: @grayDark;
}
.media-grid, .media-list{
    padding: 0px; margin:0px; .clearfix();
    li{ 
        .clearfix(); list-style: none; padding: 0px; margin:0px; 
    }
}
.media-grid{
    &.compensate-margins{
        margin-right: -@gridGutterWidth;
        margin-bottom: -@gridGutterWidth;
    }
  li{ 
    display: inline-block; 
    float: left;
    margin: 0 @gridGutterWidth*0.9 @gridGutterWidth*0.9 0;
    .grid-hide{ display:none !important}
    &.list-header{display:none}
    .clearfix();
    .mgitem{ max-width: 350px; }
  }
}
.media-list{
  .mgridfluid(@fluidGridColumnWidth, @fluidGridGutterWidth);
  li{ 
    padding: @gridGutterWidth @gridGutterWidth*0.1;
    .box-sizing(border-box);
    line-height: @baseLineHeight;
    text-align: left;
    vertical-align: top;
    border-bottom: 1px solid @tableBorder;
    .list-hide{ display:none !important}
    &.list-header{ padding: 5px; [class*="mgcol"] { min-height: @baseLineHeight}  }
    .feature{
        .media-file{ border: none; width: auto; height: auto; .media-type{margin: 0 auto;}}
    }
    &:last-child{ border-bottom: none; }
  }
}
